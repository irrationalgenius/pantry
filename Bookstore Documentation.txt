
# Bookstore Documentation


"API endpoints"   "Handler functions"   "HTTP actions"
/books            GetBooks	          	GET
/book/{id}	      GetBook	            	GET
/books	          AddBook	            	POST
/books	        	UpdateBook	        	PUT
/book/{id}	    	RemoveBook	        	DELETE

API endpoint = Specific URL to make the request, or known as a path
Handler function = Specific code function to handle when requested
HTTP actions = Specific HTTP action type

Standard 7 HTTP Actions:
	GET -> Retrieves all resources in a collection, or a single resource
	HEAD -> Retrieves all resources in a collection, or a single resource (header only)
	POST -> Create a new resource in a collection
	PUT -> Update a resource
	PATCH -> Update a resource
	DELETE -> Delete a resource
	OPTIONS -> Return available HTTP methods

What is REST?
	REST = Representational State Transfer
	Sets the rules for Client and Server communications
	An architectural type of decoupling the client and server, able to develop
		these areas independently for "Separation of Concerns"
	The client send the "Request", the server sends a "Response" or
		status code, in case of any errors
	An HTTP Request contains 6 major areas:
		1. Request URL
		2. HTTP verbs (methods)
		3. Resource paths (API endpoints)
		4. HTTP Headers: Key and value pairs
		5. Request payload: Type depends on the Content-Type, in the header
		6. Response payload

----------------------  Bookstore  ----------------------
--------------------  Configuration  --------------------

Bookstore Project Packages:
	Gorilla Mux: For Routing
	Go net/http: For making HTTP requests
	Go encoding/json: For encoding and Decoding an object
	Go reflect: For type checking
	Go strconv: For string conversions
